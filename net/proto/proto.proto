syntax = "proto3";

option go_package = "github.com/cherry-game/cherry/net/proto/proto;cherryProto";

package cherryProto;

// 成员结构
message Member {
  string              nodeId   = 1; // 节点id
  string              nodeType = 2; // 节点类型
  string              address  = 3; // rpc连接地址
  map<string, string> settings = 4; // 节点配置参数
}

// 成员列表结构
message MemberList {
  repeated Member list = 1;
}

// 请求消息结构
message Request {
  string              sid        = 1;  // sid
  int64               uid        = 2;  // uid
  string              frontendId = 3;  // 前端节点id
  string              ip         = 4;  // client ip
  map<string, string> setting    = 5;  // 附带的参数
  int32               msgType    = 6;  // 消息类型(request,notify,response,push)
  uint32              msgId      = 7;  // 消息序号id
  string              route      = 8;  // 路由
  bytes               data       = 9;  // 自定义数据
  bool                isError    = 10; // 是否返回错误
  string              reply      = 11; // 回复标识
}

// 响应消息结构
message Response {
  int32 code = 1; // message code
  bytes data = 2; // 自定义数据
}

// 推送
message Push {
  string route = 1; // 路由
  int64  uid   = 2; // uid
  bytes  data  = 3; // 自定义数据
}

// 踢人
message Kick {
  int64 uid   = 1; // uid
  bytes data  = 2; // 自定义数据
  bool  close = 3; // 是否主动关闭连接
}